images:
  - "images/newt.jpg"
  - "images/jupiter.jpg"
  - "images/mountains.jpg"
mlp:
  layer_type: "continuous"
  n: 3
  n_in: null
  n_out: null
  n_hidden: null
  periodicity: 2.0
  rescale_output: False
  scale: 2.0
  input:
    segments: 1
    width: null # Computed after loading((width+2*outside)^2-width^2)*channels (width and outside are from data.width and data.outside)
  output:
    segments: 1
    width: null # Computed after loading width*width*channels (width is from data.width)
  hidden:
    segments: 2
    layers: 1
    width: 10

data:
  # width of the inner square block used as the target
  # with width=3 3x3*channels blocks are the target values
  width: 3
  # the padding used as the features. with a 3x3 inner block
  # the padding size would be  (9*9-3*3)*channels
  outside: 3

max_epochs: 50
gpus: 1
accelerator: cuda
lr: 1e-3
batch_size: 256

# Are you training? Otherwise plot the result
train: True
checkpoint: null

defaults:
  - optimizer: adam
